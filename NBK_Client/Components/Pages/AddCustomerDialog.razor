
﻿<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog>
        <DialogContent>
            <MudTextField Label="Customer Name" @bind-Value="model.CustomerName" For="(() => model.CustomerName)"  />
            <MudDatePicker Label="Date" Editable="true" @bind-Date="time" Mask="@(new DateMask("dd.MM.yyyy"))" DateFormat="dd.MM.yyyy" Required />
            <MudTextField Label="Gender" @bind-Value="model.Gender" For="(() => model.Gender)"  />

        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [CascadingParameter] GlobalAppState State { get; set; }
    public Models.Requests.CustomerReq model = new Models.Requests.CustomerReq();
    DateTime? time = new DateTime();


    void Cancel() => MudDialog.Cancel();
    void Submit() => MudDialog.Close(() =>
    {
        DialogResult.Ok(true);
    });

    public async Task OnValidSubmit()
    {
        try
        {
            model.DateOfBirth = time ?? new DateTime();
            var http = State.CreateClient();
            var response = await http.PostAsJsonAsync($"/Customers", model);
            Submit();
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine(ex);
        }
    }
}